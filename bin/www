#!/usr/bin/env node

const app = require('../app');
const http = require('http');
const log = require('../utils/logs/log');

const env = process.env.NODE_ENV === 'prod' ? require('../config/prod.json') : require('../config/dev.json');

for (const key in env) {
	if (env[key] && !process.env[key]) {
		process.env[key] = env[key];
	}
}

const port = process.env.PORT || 3000;

const server = http.createServer(app.callback());
server.listen(port);
server.on('error', onError);
server.on('listening', onListening);

function onError (error) {
	if (error.syscall !== 'listen') {
		throw error;
	}

	const bind = typeof port === 'string'
		? 'Pipe ' + port
		: 'Port ' + port;

	switch (error.code) {
	case 'EACCES':
		log.error(bind + ' requires elevated privileges');
		process.exit(1);
	case 'EADDRINUSE':
		log.error(bind + ' is already in use');
		process.exit(1);
	default:
		throw error;
	}
}

function onListening () {
	const addr = server.address();
	const bind = typeof addr === 'string'
		? 'pipe ' + addr
		: 'port ' + addr.port;
	log.info('Listening on ' + bind);
}
